import {Patient} from "../Patient/patient.model";

export interface DoctorRequest {

  doctorname: string;
  medicalID: string;
  speciality: string;
  address: string;
  score: number;
  phonenumber: string;
  // This is how you send affiliated insurance IDs to the backend
  affiliatedInsuranceIds?: number[]; // Use number[] for list of IDs
  // If you also want to send family affiliations:
  affiliatedFamilyIds?: number[];     // Use number[] for list of IDs
  hospital: string;
  numberofpatients: number;
  password?: string; // Optional for updates, typically required for creation
  gender: boolean;
}


export interface DoctorResponse {

  id: number; // The ID is generated by the backend
  doctorname: string;
  medicalID: string;
  speciality: string;
  address: string;
  score: number;
  phonenumber: string;

  affiliatedInsurances: InsuranceSimple[];

  hospital: string;
  numberofpatients: number;
  gender: boolean;
  numberOfPrescriptions: number; // Calculated field from backend
  password?: string; // Optional for updates, typically required for creation

}

export interface InsuranceSimple {

  id: number;
  providerName: string;
  policyNumber: string;
}

export interface Doctor {
  id: number;
  doctorname: string;
  medicalID: string;
  speciality: string;
  address: string;
  score: number;
  phonenumber: string;
  insurance: string;
  hospital: string;
  numberofpatients: number;
  gender: boolean;

  patients: Patient[];

}

export interface CheckDoctorRequest {
  id : number;
  medicalID: string;
  password?: string;
}

export interface UpdatePasswordRequest {
  newPassword: string;
}

